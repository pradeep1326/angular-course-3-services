/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { A11yModule } from '@angular/cdk/a11y';
import { ObserversModule } from '@angular/cdk/observers';
import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MatCommonModule, MatRippleModule } from '@angular/material/core';
import { MatInkBar } from './ink-bar';
import { MatTab } from './tab';
import { MatTabBody, MatTabBodyPortal } from './tab-body';
import { MatTabContent } from './tab-content';
import { MatTabGroup } from './tab-group';
import { MatTabHeader } from './tab-header';
import { MatTabLabel } from './tab-label';
import { MatTabLabelWrapper } from './tab-label-wrapper';
import { MatTabLink, MatTabNav } from './tab-nav-bar/tab-nav-bar';
import * as ɵngcc0 from '@angular/core';
var MatTabsModule = /** @class */ (function () {
    function MatTabsModule() {
    }
MatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });
MatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[
            CommonModule,
            MatCommonModule,
            PortalModule,
            MatRippleModule,
            ObserversModule,
            A11yModule,
        ],
        MatCommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,
        MatTabLabel,
        MatTab,
        MatInkBar,
        MatTabLabelWrapper,
        MatTabNav,
        MatTabLink,
        MatTabBody,
        MatTabBodyPortal,
        MatTabHeader,
        MatTabContent]; }, imports: function () { return [CommonModule,
        MatCommonModule,
        PortalModule,
        MatRippleModule,
        ObserversModule,
        A11yModule]; }, exports: function () { return [MatCommonModule,
        MatTabGroup,
        MatTabLabel,
        MatTab,
        MatTabNav,
        MatTabLink,
        MatTabContent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    MatCommonModule,
                    PortalModule,
                    MatRippleModule,
                    ObserversModule,
                    A11yModule,
                ],
                // Don't export all components because some are only to be used internally.
                exports: [
                    MatCommonModule,
                    MatTabGroup,
                    MatTabLabel,
                    MatTab,
                    MatTabNav,
                    MatTabLink,
                    MatTabContent,
                ],
                declarations: [
                    MatTabGroup,
                    MatTabLabel,
                    MatTab,
                    MatInkBar,
                    MatTabLabelWrapper,
                    MatTabNav,
                    MatTabLink,
                    MatTabBody,
                    MatTabBodyPortal,
                    MatTabHeader,
                    MatTabContent,
                ]
            }]
    }], function () { return []; }, null); })();
    return MatTabsModule;
}());
export { MatTabsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3B1dHRwL0Rlc2t0b3AvQW5ndWxhci93b3Jrc3BhY2UvYW5ndWxhci1jb3Vyc2UtMy1zZXJ2aWNlcy9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvZXNtNS90YWJzL3RhYnMtbW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTs7S0FFSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBbUNDIiwiZmlsZSI6InRhYnMtbW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgeyBBMTF5TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgT2JzZXJ2ZXJzTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL29ic2VydmVycyc7XG5pbXBvcnQgeyBQb3J0YWxNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0Q29tbW9uTW9kdWxlLCBNYXRSaXBwbGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jb3JlJztcbmltcG9ydCB7IE1hdElua0JhciB9IGZyb20gJy4vaW5rLWJhcic7XG5pbXBvcnQgeyBNYXRUYWIgfSBmcm9tICcuL3RhYic7XG5pbXBvcnQgeyBNYXRUYWJCb2R5LCBNYXRUYWJCb2R5UG9ydGFsIH0gZnJvbSAnLi90YWItYm9keSc7XG5pbXBvcnQgeyBNYXRUYWJDb250ZW50IH0gZnJvbSAnLi90YWItY29udGVudCc7XG5pbXBvcnQgeyBNYXRUYWJHcm91cCB9IGZyb20gJy4vdGFiLWdyb3VwJztcbmltcG9ydCB7IE1hdFRhYkhlYWRlciB9IGZyb20gJy4vdGFiLWhlYWRlcic7XG5pbXBvcnQgeyBNYXRUYWJMYWJlbCB9IGZyb20gJy4vdGFiLWxhYmVsJztcbmltcG9ydCB7IE1hdFRhYkxhYmVsV3JhcHBlciB9IGZyb20gJy4vdGFiLWxhYmVsLXdyYXBwZXInO1xuaW1wb3J0IHsgTWF0VGFiTGluaywgTWF0VGFiTmF2IH0gZnJvbSAnLi90YWItbmF2LWJhci90YWItbmF2LWJhcic7XG52YXIgTWF0VGFic01vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNYXRUYWJzTW9kdWxlKCkge1xuICAgIH1cbiAgICBNYXRUYWJzTW9kdWxlLmRlY29yYXRvcnMgPSBbXG4gICAgICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgICAgIGltcG9ydHM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdENvbW1vbk1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFBvcnRhbE1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFJpcHBsZU1vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE9ic2VydmVyc01vZHVsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIEExMXlNb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIC8vIERvbid0IGV4cG9ydCBhbGwgY29tcG9uZW50cyBiZWNhdXNlIHNvbWUgYXJlIG9ubHkgdG8gYmUgdXNlZCBpbnRlcm5hbGx5LlxuICAgICAgICAgICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRDb21tb25Nb2R1bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRUYWJHcm91cCxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYkxhYmVsLFxuICAgICAgICAgICAgICAgICAgICAgICAgTWF0VGFiLFxuICAgICAgICAgICAgICAgICAgICAgICAgTWF0VGFiTmF2LFxuICAgICAgICAgICAgICAgICAgICAgICAgTWF0VGFiTGluayxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYkNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgTWF0VGFiR3JvdXAsXG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRUYWJMYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYixcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdElua0JhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYkxhYmVsV3JhcHBlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYk5hdixcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYkxpbmssXG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRUYWJCb2R5LFxuICAgICAgICAgICAgICAgICAgICAgICAgTWF0VGFiQm9keVBvcnRhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYkhlYWRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdFRhYkNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxdIH1cbiAgICBdO1xuICAgIHJldHVybiBNYXRUYWJzTW9kdWxlO1xufSgpKTtcbmV4cG9ydCB7IE1hdFRhYnNNb2R1bGUgfTtcbiJdfQ==