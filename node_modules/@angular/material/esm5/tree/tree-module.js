/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgModule } from '@angular/core';
import { CdkTreeModule } from '@angular/cdk/tree';
import { CommonModule } from '@angular/common';
import { MatCommonModule } from '@angular/material/core';
import { MatNestedTreeNode, MatTreeNodeDef, MatTreeNode } from './node';
import { MatTree } from './tree';
import { MatTreeNodeToggle } from './toggle';
import { MatTreeNodeOutlet } from './outlet';
import { MatTreeNodePadding } from './padding';
import * as ɵngcc0 from '@angular/core';
var MAT_TREE_DIRECTIVES = [
    MatNestedTreeNode,
    MatTreeNodeDef,
    MatTreeNodePadding,
    MatTreeNodeToggle,
    MatTree,
    MatTreeNode,
    MatTreeNodeOutlet
];
var MatTreeModule = /** @class */ (function () {
    function MatTreeModule() {
    }
MatTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTreeModule });
MatTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTreeModule_Factory(t) { return new (t || MatTreeModule)(); }, imports: [[CdkTreeModule, CommonModule, MatCommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTreeModule, { declarations: function () { return [MatNestedTreeNode,
        MatTreeNodeDef,
        MatTreeNodePadding,
        MatTreeNodeToggle,
        MatTree,
        MatTreeNode,
        MatTreeNodeOutlet]; }, imports: function () { return [CdkTreeModule, CommonModule, MatCommonModule]; }, exports: function () { return [MatNestedTreeNode,
        MatTreeNodeDef,
        MatTreeNodePadding,
        MatTreeNodeToggle,
        MatTree,
        MatTreeNode,
        MatTreeNodeOutlet]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeModule, [{
        type: NgModule,
        args: [{
                imports: [CdkTreeModule, CommonModule, MatCommonModule],
                exports: MAT_TREE_DIRECTIVES,
                declarations: MAT_TREE_DIRECTIVES
            }]
    }], function () { return []; }, null); })();
    return MatTreeModule;
}());
export { MatTreeModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3B1dHRwL0Rlc2t0b3AvQW5ndWxhci93b3Jrc3BhY2UvYW5ndWxhci1jb3Vyc2UtMy1zZXJ2aWNlcy9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvZXNtNS90cmVlL3RyZWUtbW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTs7Ozs7Ozs7Ozs7S0FXSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBT0MiLCJmaWxlIjoidHJlZS1tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZGtUcmVlTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3RyZWUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE1hdENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuaW1wb3J0IHsgTWF0TmVzdGVkVHJlZU5vZGUsIE1hdFRyZWVOb2RlRGVmLCBNYXRUcmVlTm9kZSB9IGZyb20gJy4vbm9kZSc7XG5pbXBvcnQgeyBNYXRUcmVlIH0gZnJvbSAnLi90cmVlJztcbmltcG9ydCB7IE1hdFRyZWVOb2RlVG9nZ2xlIH0gZnJvbSAnLi90b2dnbGUnO1xuaW1wb3J0IHsgTWF0VHJlZU5vZGVPdXRsZXQgfSBmcm9tICcuL291dGxldCc7XG5pbXBvcnQgeyBNYXRUcmVlTm9kZVBhZGRpbmcgfSBmcm9tICcuL3BhZGRpbmcnO1xudmFyIE1BVF9UUkVFX0RJUkVDVElWRVMgPSBbXG4gICAgTWF0TmVzdGVkVHJlZU5vZGUsXG4gICAgTWF0VHJlZU5vZGVEZWYsXG4gICAgTWF0VHJlZU5vZGVQYWRkaW5nLFxuICAgIE1hdFRyZWVOb2RlVG9nZ2xlLFxuICAgIE1hdFRyZWUsXG4gICAgTWF0VHJlZU5vZGUsXG4gICAgTWF0VHJlZU5vZGVPdXRsZXRcbl07XG52YXIgTWF0VHJlZU1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNYXRUcmVlTW9kdWxlKCkge1xuICAgIH1cbiAgICBNYXRUcmVlTW9kdWxlLmRlY29yYXRvcnMgPSBbXG4gICAgICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgICAgIGltcG9ydHM6IFtDZGtUcmVlTW9kdWxlLCBDb21tb25Nb2R1bGUsIE1hdENvbW1vbk1vZHVsZV0sXG4gICAgICAgICAgICAgICAgICAgIGV4cG9ydHM6IE1BVF9UUkVFX0RJUkVDVElWRVMsXG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogTUFUX1RSRUVfRElSRUNUSVZFUyxcbiAgICAgICAgICAgICAgICB9LF0gfVxuICAgIF07XG4gICAgcmV0dXJuIE1hdFRyZWVNb2R1bGU7XG59KCkpO1xuZXhwb3J0IHsgTWF0VHJlZU1vZHVsZSB9O1xuIl19