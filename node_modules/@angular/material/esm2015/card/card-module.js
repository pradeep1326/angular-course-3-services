/**
 * @fileoverview added by tsickle
 * Generated from: src/material/card/card-module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgModule } from '@angular/core';
import { MatCommonModule } from '@angular/material/core';
import { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage, } from './card';
import * as ɵngcc0 from '@angular/core';
export class MatCardModule {
}
MatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });
MatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],
        MatCommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,
        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,
        MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,
        MatCardHeader,
        MatCardTitleGroup,
        MatCardContent,
        MatCardTitle,
        MatCardSubtitle,
        MatCardActions,
        MatCardFooter,
        MatCardSmImage,
        MatCardMdImage,
        MatCardLgImage,
        MatCardImage,
        MatCardXlImage,
        MatCardAvatar,
        MatCommonModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{
        type: NgModule,
        args: [{
                imports: [MatCommonModule],
                exports: [
                    MatCard,
                    MatCardHeader,
                    MatCardTitleGroup,
                    MatCardContent,
                    MatCardTitle,
                    MatCardSubtitle,
                    MatCardActions,
                    MatCardFooter,
                    MatCardSmImage,
                    MatCardMdImage,
                    MatCardLgImage,
                    MatCardImage,
                    MatCardXlImage,
                    MatCardAvatar,
                    MatCommonModule,
                ],
                declarations: [
                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,
                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,
                    MatCardXlImage, MatCardAvatar,
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3B1dHRwL0Rlc2t0b3AvQW5ndWxhci93b3Jrc3BhY2UvYW5ndWxhci1jb3Vyc2UtMy1zZXJ2aWNlcy9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvZXNtMjAxNS9jYXJkL2NhcmQtbW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0FBZUE7Ozs7Q0FDQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQTJCQyIsImZpbGUiOiJjYXJkLW1vZHVsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBHZW5lcmF0ZWQgZnJvbTogc3JjL21hdGVyaWFsL2NhcmQvY2FyZC1tb2R1bGUudHNcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0Q29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XG5pbXBvcnQgeyBNYXRDYXJkLCBNYXRDYXJkQWN0aW9ucywgTWF0Q2FyZEF2YXRhciwgTWF0Q2FyZENvbnRlbnQsIE1hdENhcmRGb290ZXIsIE1hdENhcmRIZWFkZXIsIE1hdENhcmRJbWFnZSwgTWF0Q2FyZExnSW1hZ2UsIE1hdENhcmRNZEltYWdlLCBNYXRDYXJkU21JbWFnZSwgTWF0Q2FyZFN1YnRpdGxlLCBNYXRDYXJkVGl0bGUsIE1hdENhcmRUaXRsZUdyb3VwLCBNYXRDYXJkWGxJbWFnZSwgfSBmcm9tICcuL2NhcmQnO1xuZXhwb3J0IGNsYXNzIE1hdENhcmRNb2R1bGUge1xufVxuTWF0Q2FyZE1vZHVsZS5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgaW1wb3J0czogW01hdENvbW1vbk1vZHVsZV0sXG4gICAgICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkSGVhZGVyLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkVGl0bGVHcm91cCxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZENvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRUaXRsZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZFN1YnRpdGxlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkQWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZEZvb3RlcixcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZFNtSW1hZ2UsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRNZEltYWdlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkTGdJbWFnZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZEltYWdlLFxuICAgICAgICAgICAgICAgICAgICBNYXRDYXJkWGxJbWFnZSxcbiAgICAgICAgICAgICAgICAgICAgTWF0Q2FyZEF2YXRhcixcbiAgICAgICAgICAgICAgICAgICAgTWF0Q29tbW9uTW9kdWxlLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmQsIE1hdENhcmRIZWFkZXIsIE1hdENhcmRUaXRsZUdyb3VwLCBNYXRDYXJkQ29udGVudCwgTWF0Q2FyZFRpdGxlLCBNYXRDYXJkU3VidGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRBY3Rpb25zLCBNYXRDYXJkRm9vdGVyLCBNYXRDYXJkU21JbWFnZSwgTWF0Q2FyZE1kSW1hZ2UsIE1hdENhcmRMZ0ltYWdlLCBNYXRDYXJkSW1hZ2UsXG4gICAgICAgICAgICAgICAgICAgIE1hdENhcmRYbEltYWdlLCBNYXRDYXJkQXZhdGFyLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9LF0gfVxuXTtcbiJdfQ==