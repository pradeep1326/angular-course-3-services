{"version":3,"sources":["c:/Users/puttp/Desktop/Angular/workspace/angular-course-3-services/node_modules/@angular/material/bundles/material-stepper.umd.js"],"names":[],"mappings":"AAAA;gWAC2E;0RACW;iOAChD;kFACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA4G;;;;;;;;;;;;;SAatH;;;;;;;;;0BAKC;;;;;;;;;;;;;;;;;;;;;SAqBD,AAGC;;;;;;gDACuK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAsEvK,AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA6CD,AAKC;;;;;;;;;;;;;;;;;;oBAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;UA2BA,AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAkCA,AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAOA;;;;;;;;;;SAUD,AAuBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAGA;;;;;;;;;;;SAWD,AAqBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOG;;;;;;;;;;;;;;;;SAgBJ;;;;;;;;;;;;;;;0BASC;;;;;;;;SAQD;;;;;;;;;;;;;;;0BASC;;;;;;;;;;;;;SAaD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAqCC","file":"material-stepper.umd.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/portal'), require('@angular/cdk/stepper'), require('@angular/common'), require('@angular/core'), require('@angular/material/button'), require('@angular/material/core'), require('@angular/material/icon'), require('tslib'), require('@angular/cdk/a11y'), require('rxjs'), require('@angular/cdk/bidi'), require('rxjs/operators'), require('@angular/animations')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/stepper', ['exports', '@angular/cdk/portal', '@angular/cdk/stepper', '@angular/common', '@angular/core', '@angular/material/button', '@angular/material/core', '@angular/material/icon', 'tslib', '@angular/cdk/a11y', 'rxjs', '@angular/cdk/bidi', 'rxjs/operators', '@angular/animations'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.stepper = {}), global.ng.cdk.portal, global.ng.cdk.stepper, global.ng.common, global.ng.core, global.ng.material.button, global.ng.material.core, global.ng.material.icon, global.tslib, global.ng.cdk.a11y, global.rxjs, global.ng.cdk.bidi, global.rxjs.operators, global.ng.animations));\n}(this, (function (exports, portal, stepper, common, i0, button, core, icon, tslib, a11y, rxjs, bidi, operators, animations) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatStepLabel = /** @class */ (function (_super) {\n        tslib.__extends(MatStepLabel, _super);\n        function MatStepLabel() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MatStepLabel.decorators = [\n            { type: i0.Directive, args: [{\n                        selector: '[matStepLabel]',\n                    },] }\n        ];\n        return MatStepLabel;\n    }(stepper.CdkStepLabel));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Stepper data that is required for internationalization. */\n    var MatStepperIntl = /** @class */ (function () {\n        function MatStepperIntl() {\n            /**\n             * Stream that emits whenever the labels here are changed. Use this to notify\n             * components if the labels have changed after initialization.\n             */\n            this.changes = new rxjs.Subject();\n            /** Label that is rendered below optional steps. */\n            this.optionalLabel = 'Optional';\n        }\n        MatStepperIntl.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        MatStepperIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n        return MatStepperIntl;\n    }());\n    /** @docs-private */\n    function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n        return parentIntl || new MatStepperIntl();\n    }\n    /** @docs-private */\n    var MAT_STEPPER_INTL_PROVIDER = {\n        provide: MatStepperIntl,\n        deps: [[new i0.Optional(), new i0.SkipSelf(), MatStepperIntl]],\n        useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatStepHeader = /** @class */ (function (_super) {\n        tslib.__extends(MatStepHeader, _super);\n        function MatStepHeader(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n            var _this = _super.call(this, _elementRef) || this;\n            _this._intl = _intl;\n            _this._focusMonitor = _focusMonitor;\n            _focusMonitor.monitor(_elementRef, true);\n            _this._intlSubscription = _intl.changes.subscribe(function () { return changeDetectorRef.markForCheck(); });\n            return _this;\n        }\n        MatStepHeader.prototype.ngOnDestroy = function () {\n            this._intlSubscription.unsubscribe();\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        };\n        /** Focuses the step header. */\n        MatStepHeader.prototype.focus = function () {\n            this._focusMonitor.focusVia(this._elementRef, 'program');\n        };\n        /** Returns string label of given step if it is a text label. */\n        MatStepHeader.prototype._stringLabel = function () {\n            return this.label instanceof MatStepLabel ? null : this.label;\n        };\n        /** Returns MatStepLabel if the label of given step is a template label. */\n        MatStepHeader.prototype._templateLabel = function () {\n            return this.label instanceof MatStepLabel ? this.label : null;\n        };\n        /** Returns the host HTML element. */\n        MatStepHeader.prototype._getHostElement = function () {\n            return this._elementRef.nativeElement;\n        };\n        /** Template context variables that are exposed to the `matStepperIcon` instances. */\n        MatStepHeader.prototype._getIconContext = function () {\n            return {\n                index: this.index,\n                active: this.active,\n                optional: this.optional\n            };\n        };\n        MatStepHeader.prototype._getDefaultTextForState = function (state) {\n            if (state == 'number') {\n                return \"\" + (this.index + 1);\n            }\n            if (state == 'edit') {\n                return 'create';\n            }\n            if (state == 'error') {\n                return 'warning';\n            }\n            return state;\n        };\n        MatStepHeader.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'mat-step-header',\n                        template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                        host: {\n                            'class': 'mat-step-header',\n                            'role': 'tab',\n                        },\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatStepHeader.ctorParameters = function () { return [\n            { type: MatStepperIntl },\n            { type: a11y.FocusMonitor },\n            { type: i0.ElementRef },\n            { type: i0.ChangeDetectorRef }\n        ]; };\n        MatStepHeader.propDecorators = {\n            state: [{ type: i0.Input }],\n            label: [{ type: i0.Input }],\n            errorMessage: [{ type: i0.Input }],\n            iconOverrides: [{ type: i0.Input }],\n            index: [{ type: i0.Input }],\n            selected: [{ type: i0.Input }],\n            active: [{ type: i0.Input }],\n            optional: [{ type: i0.Input }],\n            disableRipple: [{ type: i0.Input }]\n        };\n        return MatStepHeader;\n    }(stepper.CdkStepHeader));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Animations used by the Material steppers.\n     * @docs-private\n     */\n    var matStepperAnimations = {\n        /** Animation that transitions the step along the X axis in a horizontal stepper. */\n        horizontalStepTransition: animations.trigger('stepTransition', [\n            animations.state('previous', animations.style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n            animations.state('current', animations.style({ transform: 'none', visibility: 'visible' })),\n            animations.state('next', animations.style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n            animations.transition('* => *', animations.animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n        ]),\n        /** Animation that transitions the step along the Y axis in a vertical stepper. */\n        verticalStepTransition: animations.trigger('stepTransition', [\n            animations.state('previous', animations.style({ height: '0px', visibility: 'hidden' })),\n            animations.state('next', animations.style({ height: '0px', visibility: 'hidden' })),\n            animations.state('current', animations.style({ height: '*', visibility: 'visible' })),\n            animations.transition('* <=> current', animations.animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n        ])\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Template to be used to override the icons inside the step header.\n     */\n    var MatStepperIcon = /** @class */ (function () {\n        function MatStepperIcon(templateRef) {\n            this.templateRef = templateRef;\n        }\n        MatStepperIcon.decorators = [\n            { type: i0.Directive, args: [{\n                        selector: 'ng-template[matStepperIcon]',\n                    },] }\n        ];\n        /** @nocollapse */\n        MatStepperIcon.ctorParameters = function () { return [\n            { type: i0.TemplateRef }\n        ]; };\n        MatStepperIcon.propDecorators = {\n            name: [{ type: i0.Input, args: ['matStepperIcon',] }]\n        };\n        return MatStepperIcon;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatStep = /** @class */ (function (_super) {\n        tslib.__extends(MatStep, _super);\n        /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n        function MatStep(stepper, _errorStateMatcher, stepperOptions) {\n            var _this = _super.call(this, stepper, stepperOptions) || this;\n            _this._errorStateMatcher = _errorStateMatcher;\n            return _this;\n        }\n        /** Custom error state matcher that additionally checks for validity of interacted form. */\n        MatStep.prototype.isErrorState = function (control, form) {\n            var originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n            // Custom error state checks for the validity of form that is not submitted or touched\n            // since user can trigger a form change by calling for another step without directly\n            // interacting with the current form.\n            var customErrorState = !!(control && control.invalid && this.interacted);\n            return originalErrorState || customErrorState;\n        };\n        MatStep.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'mat-step',\n                        template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                        providers: [\n                            { provide: core.ErrorStateMatcher, useExisting: MatStep },\n                            { provide: stepper.CdkStep, useExisting: MatStep },\n                        ],\n                        encapsulation: i0.ViewEncapsulation.None,\n                        exportAs: 'matStep',\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        MatStep.ctorParameters = function () { return [\n            { type: MatStepper, decorators: [{ type: i0.Inject, args: [i0.forwardRef(function () { return MatStepper; }),] }] },\n            { type: core.ErrorStateMatcher, decorators: [{ type: i0.SkipSelf }] },\n            { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [stepper.STEPPER_GLOBAL_OPTIONS,] }] }\n        ]; };\n        MatStep.propDecorators = {\n            stepLabel: [{ type: i0.ContentChild, args: [MatStepLabel,] }]\n        };\n        return MatStep;\n    }(stepper.CdkStep));\n    var MatStepper = /** @class */ (function (_super) {\n        tslib.__extends(MatStepper, _super);\n        function MatStepper() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Event emitted when the current step is done transitioning in. */\n            _this.animationDone = new i0.EventEmitter();\n            /** Consumer-specified template-refs to be used to override the header icons. */\n            _this._iconOverrides = {};\n            /** Stream of animation `done` events when the body expands/collapses. */\n            _this._animationDone = new rxjs.Subject();\n            return _this;\n        }\n        MatStepper.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this._icons.forEach(function (_a) {\n                var name = _a.name, templateRef = _a.templateRef;\n                return _this._iconOverrides[name] = templateRef;\n            });\n            // Mark the component for change detection whenever the content children query changes\n            this._steps.changes.pipe(operators.takeUntil(this._destroyed)).subscribe(function () {\n                _this._stateChanged();\n            });\n            this._animationDone.pipe(\n            // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n            // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n            // See https://github.com/angular/angular/issues/24084\n            operators.distinctUntilChanged(function (x, y) { return x.fromState === y.fromState && x.toState === y.toState; }), operators.takeUntil(this._destroyed)).subscribe(function (event) {\n                if (event.toState === 'current') {\n                    _this.animationDone.emit();\n                }\n            });\n        };\n        MatStepper.decorators = [\n            { type: i0.Directive, args: [{ selector: '[matStepper]', providers: [{ provide: stepper.CdkStepper, useExisting: MatStepper }] },] }\n        ];\n        MatStepper.propDecorators = {\n            _stepHeader: [{ type: i0.ViewChildren, args: [MatStepHeader,] }],\n            _steps: [{ type: i0.ContentChildren, args: [MatStep, { descendants: true },] }],\n            _icons: [{ type: i0.ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n            animationDone: [{ type: i0.Output }],\n            disableRipple: [{ type: i0.Input }]\n        };\n        return MatStepper;\n    }(stepper.CdkStepper));\n    var MatHorizontalStepper = /** @class */ (function (_super) {\n        tslib.__extends(MatHorizontalStepper, _super);\n        function MatHorizontalStepper() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Whether the label should display in bottom or end position. */\n            _this.labelPosition = 'end';\n            return _this;\n        }\n        MatHorizontalStepper.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'mat-horizontal-stepper',\n                        exportAs: 'matHorizontalStepper',\n                        template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                        inputs: ['selectedIndex'],\n                        host: {\n                            'class': 'mat-stepper-horizontal',\n                            '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                            '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                            'aria-orientation': 'horizontal',\n                            'role': 'tablist',\n                        },\n                        animations: [matStepperAnimations.horizontalStepTransition],\n                        providers: [\n                            { provide: MatStepper, useExisting: MatHorizontalStepper },\n                            { provide: stepper.CdkStepper, useExisting: MatHorizontalStepper }\n                        ],\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n                    }] }\n        ];\n        MatHorizontalStepper.propDecorators = {\n            labelPosition: [{ type: i0.Input }]\n        };\n        return MatHorizontalStepper;\n    }(MatStepper));\n    var MatVerticalStepper = /** @class */ (function (_super) {\n        tslib.__extends(MatVerticalStepper, _super);\n        function MatVerticalStepper(dir, changeDetectorRef, \n        // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n        elementRef, _document) {\n            var _this = _super.call(this, dir, changeDetectorRef, elementRef, _document) || this;\n            _this._orientation = 'vertical';\n            return _this;\n        }\n        MatVerticalStepper.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'mat-vertical-stepper',\n                        exportAs: 'matVerticalStepper',\n                        template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                        inputs: ['selectedIndex'],\n                        host: {\n                            'class': 'mat-stepper-vertical',\n                            'aria-orientation': 'vertical',\n                            'role': 'tablist',\n                        },\n                        animations: [matStepperAnimations.verticalStepTransition],\n                        providers: [\n                            { provide: MatStepper, useExisting: MatVerticalStepper },\n                            { provide: stepper.CdkStepper, useExisting: MatVerticalStepper }\n                        ],\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatVerticalStepper.ctorParameters = function () { return [\n            { type: bidi.Directionality, decorators: [{ type: i0.Optional }] },\n            { type: i0.ChangeDetectorRef },\n            { type: i0.ElementRef },\n            { type: undefined, decorators: [{ type: i0.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        return MatVerticalStepper;\n    }(MatStepper));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Button that moves to the next step in a stepper workflow. */\n    var MatStepperNext = /** @class */ (function (_super) {\n        tslib.__extends(MatStepperNext, _super);\n        function MatStepperNext() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MatStepperNext.decorators = [\n            { type: i0.Directive, args: [{\n                        selector: 'button[matStepperNext]',\n                        host: {\n                            '[type]': 'type',\n                        },\n                        inputs: ['type']\n                    },] }\n        ];\n        return MatStepperNext;\n    }(stepper.CdkStepperNext));\n    /** Button that moves to the previous step in a stepper workflow. */\n    var MatStepperPrevious = /** @class */ (function (_super) {\n        tslib.__extends(MatStepperPrevious, _super);\n        function MatStepperPrevious() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MatStepperPrevious.decorators = [\n            { type: i0.Directive, args: [{\n                        selector: 'button[matStepperPrevious]',\n                        host: {\n                            '[type]': 'type',\n                        },\n                        inputs: ['type']\n                    },] }\n        ];\n        return MatStepperPrevious;\n    }(stepper.CdkStepperPrevious));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatStepperModule = /** @class */ (function () {\n        function MatStepperModule() {\n        }\n        MatStepperModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [\n                            core.MatCommonModule,\n                            common.CommonModule,\n                            portal.PortalModule,\n                            button.MatButtonModule,\n                            stepper.CdkStepperModule,\n                            icon.MatIconModule,\n                            core.MatRippleModule,\n                        ],\n                        exports: [\n                            core.MatCommonModule,\n                            MatHorizontalStepper,\n                            MatVerticalStepper,\n                            MatStep,\n                            MatStepLabel,\n                            MatStepper,\n                            MatStepperNext,\n                            MatStepperPrevious,\n                            MatStepHeader,\n                            MatStepperIcon,\n                        ],\n                        declarations: [\n                            MatHorizontalStepper,\n                            MatVerticalStepper,\n                            MatStep,\n                            MatStepLabel,\n                            MatStepper,\n                            MatStepperNext,\n                            MatStepperPrevious,\n                            MatStepHeader,\n                            MatStepperIcon,\n                        ],\n                        providers: [MAT_STEPPER_INTL_PROVIDER, core.ErrorStateMatcher],\n                    },] }\n        ];\n        return MatStepperModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MAT_STEPPER_INTL_PROVIDER = MAT_STEPPER_INTL_PROVIDER;\n    exports.MAT_STEPPER_INTL_PROVIDER_FACTORY = MAT_STEPPER_INTL_PROVIDER_FACTORY;\n    exports.MatHorizontalStepper = MatHorizontalStepper;\n    exports.MatStep = MatStep;\n    exports.MatStepHeader = MatStepHeader;\n    exports.MatStepLabel = MatStepLabel;\n    exports.MatStepper = MatStepper;\n    exports.MatStepperIcon = MatStepperIcon;\n    exports.MatStepperIntl = MatStepperIntl;\n    exports.MatStepperModule = MatStepperModule;\n    exports.MatStepperNext = MatStepperNext;\n    exports.MatStepperPrevious = MatStepperPrevious;\n    exports.MatVerticalStepper = MatVerticalStepper;\n    exports.matStepperAnimations = matStepperAnimations;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}